<?xml version="1.0" encoding="UTF-8"?>
<document>

  <properties>
    <author email="marc.saegesser@apropos.com">Marc A. Saegesser</author>
    <author email="yoavs@apache.org">Yoav Shapira</author>
    <author email="jfclere@apache.org">Jean-Frederic Clere</author>
    <title>Which Version Do I Want?</title>
  </properties>

<body>

<section name="Apache Tomcat Versions">
<p>Apache Tomcat<sup>&#174;</sup> is an open source software implementation of the Java Servlet
and JavaServer Pages technologies. Different versions of Apache Tomcat are
available for different versions of the Servlet and JSP specifications. The
mapping between the specifications and the respective Apache Tomcat versions is:
</p>

<table class="detail-table">

<tr>
  <th><strong>Servlet Spec</strong></th>
  <th><strong>JSP Spec</strong></th>
  <th><strong>EL Spec</strong></th>
  <th><strong>WebSocket Spec</strong></th>
  <th><strong>JASPIC Spec</strong></th>
  <th><strong>Apache Tomcat Version</strong></th>
  <th><strong>Latest Released Version</strong></th>
  <th><strong>Supported Java Versions</strong></th>
</tr>

<tr>
  <td>4.0</td>
  <td>2.3</td>
  <td>3.0</td>
  <td>1.1</td>
  <td>1.1</td>
  <td>9.0.x</td>
  <td>9.0.2 (beta)</td>
  <td>8 and later</td>
</tr>

<tr>
  <td>3.1</td>
  <td>2.3</td>
  <td>3.0</td>
  <td>1.1</td>
  <td>1.1</td>
  <td>8.5.x</td>
  <td>8.5.24</td>
  <td>7 and later</td>
</tr>

<tr>
  <td>3.1</td>
  <td>2.3</td>
  <td>3.0</td>
  <td>1.1</td>
  <td>N/A</td>
  <td>8.0.x (superseded)</td>
  <td>8.0.48 (superseded)</td>
  <td>7 and later</td>
</tr>

<tr>
  <td>3.0</td>
  <td>2.2</td>
  <td>2.2</td>
  <td>1.1</td>
  <td>N/A</td>
  <td>7.0.x</td>
  <td>7.0.82</td>
  <td>6 and later<br/> (7 and later for WebSocket)</td>
</tr>

<tr>
  <td>2.5</td>
  <td>2.1</td>
  <td>2.1</td>
  <td>N/A</td>
  <td>N/A</td>
  <td>6.0.x (archived)</td>
  <td>6.0.53 (archived)</td>
  <td>5 and later</td>
</tr>

<tr>
  <td>2.4</td>
  <td>2.0</td>
  <td>N/A</td>
  <td>N/A</td>
  <td>N/A</td>
  <td>5.5.x (archived)</td>
  <td>5.5.36 (archived)</td>
  <td>1.4 and later</td>
</tr>

<tr>
  <td>2.3</td>
  <td>1.2</td>
  <td>N/A</td>
  <td>N/A</td>
  <td>N/A</td>
  <td>4.1.x (archived)</td>
  <td>4.1.40 (archived)</td>
  <td>1.3 and later</td>
</tr>

<tr>
  <td>2.2</td>
  <td>1.1</td>
  <td>N/A</td>
  <td>N/A</td>
  <td>N/A</td>
  <td>3.3.x (archived)</td>
  <td>3.3.2 (archived)</td>
  <td>1.1 and later</td>
</tr>

</table>

<p>Each version of Tomcat is supported for any stable Java release that meets
the requirements of the final column in the table above.</p>

<p>Tomcat should also work on any Java early access build that meets the
requirements of the final column in the table above. For example, users were
successfully running Tomcat 8 on Java 8 many months before the first stable Java
8 release. However, users of early access builds should be aware of the
following:</p>
<ul>
<li>It is not unusual for the initial early access builds to contain bugs that
    can cause problems for web applications running on Tomcat.</li>
<li>If the new Java version introduces new language features then the default
    JSP compiler may not support them immediately. Switching the JSP compiler to
    javac may enable these new language features to be used in JSPs.</li>
<li>If you do discover an problem using a Java early access build, please
    <a href="findhelp.html">ask for help</a>. The Tomcat user&apos;s mailing
    list is probably the best place to start.</li>
</ul>

<p>The releases are described in more detail below to help you determine
which one is right for you.  More details about each release can be found in
the associated release notes.</p>

<p>Please note that although we offer downloads and documentation of older
releases, such as Apache Tomcat 7.x, we strongly encourage users to use the
latest stable version of Apache Tomcat whenever possible.  We recognize that
upgrading across major versions may not be a trivial task, and some support is
still offered on the mailing list for users of old versions.  However, because
of the community-driven support approach, the older your version, fewer people
will be interested or able to support you.
</p>

</section>

<section name="Alpha / Beta / Stable">

<p>When voting for a release, reviewers specify the stability level that they
consider the release has reached. Initial releases of a new major version
typically process from Alpha, through Beta to Stable over a period of several
months. However, the Stable level is only available once the Java specifications
the release implements have been finalised. This means a release that in all
other respects is considered stable, may still be labelled as Beta if the
specifications are not final.</p>

<p>The download pages will always show the latest stable release and any newer
Alpha or Beta release if one exists. Alpha and beta releases are always clearly
marked on the download pages.</p>

<p>Stability is a subjective judgement and you should always read carefully the
release notes for any version you intend to make use of.  If you are an early
adopter of a release, we would love to hear your opinion about its stability as
part of the vote: it takes place on the <a href="lists.html">development mailing
list</a>.</p>

<p><strong>Alpha</strong> releases may contain large amounts of untested/missing
functionality required by the specification and/or significant bugs and are not
expected to run stably for any length of time.</p>

<p><strong>Beta</strong> releases may contain some untested functionality and/or
a number of relatively minor bugs. Beta releases are not expected to run stably.
</p>

<p><strong>Stable</strong> releases may contain a small number of relatively
minor bugs. Stable releases are intended for production use and are expected to
run stably for extended periods of time.</p>

</section>


<section name="Apache Tomcat 9.x">

<p><strong>Apache Tomcat 9.x</strong> is the current focus of development. It
builds on Tomcat 8.0.x and 8.5.x and implements the <strong>Servlet
4.0</strong>, <strong>JSP 2.3</strong>, <strong>EL 3.0</strong>, <strong>WebSocket 1.1
</strong> and <strong>JASPIC 1.1</strong> specifications (the versions required by
Java EE 8 platform). In addition to this, it includes
the following significant improvements:
</p>
<ul>
<li>Adds support for HTTP/2 (requires either running on Java 9 (since Apache Tomcat
    9.0.0.M18) or the <a href="/native-doc/">Tomcat Native</a> library being installed)
</li>
<li>Adds support for using OpenSSL for TLS support with the JSSE connectors
    (NIO and NIO2) </li>
<li>Adds support for TLS virtual hosting (SNI)</li>
</ul>

</section>
<section name="Apache Tomcat 8.x">

<p><strong>Apache Tomcat 8.0.x</strong> builds on Tomcat 7.0.x and implements the
<strong>Servlet 3.1</strong>, <strong>JSP 2.3</strong>, <strong>EL 3.0</strong>
and <strong>WebSocket 1.1</strong> specifications. In addition
to that, it includes the following significant improvements:
</p>
<ul>
<li>A single, common resources implementation to replace the multiple resource
    extension features provided in earlier versions.</li>
</ul>

<p>
<strong>Apache Tomcat 8.5.x</strong> supports the same Servlet, JSP, EL, and
WebSocket Specification versions as Apache Tomcat 8.0.x. In addition to that,
it also implements the <strong>JASPIC 1.1</strong> specification.
</p>

<p>
It was created in March 2016 as a fork from Tomcat 9.0.0.M4 (alpha)
milestone release. It provides HTTP/2 support and other features from
Tomcat 9.x codebase, while being compatible with Tomcat 8.0 runtime and
specification requirements. (A stable release of Tomcat 9.0 could not be
created at that time, as Java EE specifications targeted by Tomcat 9 were
finalized only a few years later).
</p>

<p>Tomcat 8.5 is thought as a replacement for Tomcat 8.0. Please refer to
<a href="/migration.html">Migration guide</a> for guidance on migrating to
Tomcat 8.5.</p>

<p>
Apache Tomcat 8.5.x includes the following significant improvements:
</p>

<ul>
<li>Adds support for HTTP/2 (requires the <a href="/native-doc/"
    >Tomcat Native</a> library)</li>
<li>Adds support for using OpenSSL for TLS support with the JSSE connectors
    (NIO and NIO2) </li>
<li>Adds support for TLS virtual hosting (SNI)</li>
</ul>

<p>The following technologies were removed in Apache Tomcat 8.5.x:</p>

<ul>
<li>BIO implementation of HTTP and AJP connectors</li>
<li>Support for Comet API</li>
</ul>

<p>There are significant changes in many areas under the hood, resulting in
improved performance, stability, and total cost of ownership.  Please refer
to the Apache Tomcat 8.5 Changelog for details.
</p>

<p>Users of Tomcat 8.0 should be aware that Tomcat 8.0 has now reached
<a href="tomcat-80-eol.html">end of life</a>. Users of Tomcat 8.0.x should
upgrade to Tomcat 8.5.x or later.</p>

</section>


<section name="Apache Tomcat 7.x">

<p><strong>Apache Tomcat 7.x</strong> builds upon the improvements made in
Tomcat 6.0.x and implements the <strong>Servlet 3.0</strong>,
<strong>JSP 2.2</strong>, <strong>EL 2.2</strong> and
<strong>WebSocket 1.1</strong> specifications. In addition
to that, it includes the following improvements:
</p>
<ul>
<li>Web application memory leak detection and prevention</li>
<li>Improved security for the Manager and Host Manager applications</li>
<li>Generic CSRF protection</li>
<li>Support for including external content directly in a web application</li>
<li>Refactoring (connectors, lifecycle) and lots of internal code clean-up</li>
</ul>

</section>


<section name="Apache Tomcat 6.x">

<p><strong>Apache Tomcat 6.x</strong> builds upon the improvements made in
Tomcat 5.5.x and implements the <strong>Servlet 2.5</strong> and
<strong>JSP 2.1</strong> specifications. In addition to that, it includes the
following improvements:
</p>
<ul>
<li>Memory usage optimizations</li>
<li>Advanced IO capabilities</li>
<li>Refactored clustering</li>
</ul>

<p>Users of Tomcat 6 should be aware that Tomcat 6 has now reached
<a href="tomcat-60-eol.html">end of life</a>. Users of Tomcat 6.x should
upgrade to Tomcat 7.x or later.</p>

</section>


<section name="Apache Tomcat 5.x">

<p><strong>Apache Tomcat 5.x</strong> is available for download from the
archives.</p>

<p><strong>Apache Tomcat 5.5.x</strong> supports the same Servlet and JSP
Specification versions as Apache Tomcat 5.0.x. There are significant changes
in many areas under the hood, resulting in improved performance, stability,
and total cost of ownership.  Please refer to the Apache Tomcat 5.5 Changelog
for details.
</p>

<p><strong>Apache Tomcat 5.0.x</strong> improves on Apache Tomcat 4.1 in many
ways, including:</p>
<ul>
<li>Performance optimizations and reduced garbage collection</li>
<li>Refactored application deployer, with an optional standalone deployer
allowing validation and compilation of a web application before putting
it in production</li>
<li>Complete server monitoring using JMX and the manager web application</li>
<li>Scalability and reliability enhancements</li>
<li>Improved Taglibs handling, including advanced pooling and tag plugins</li>
<li>Improved platform integration, with native Windows and Unix wrappers</li>
<li>Embedding using JMX</li>
<li>Enhanced Security Manager support</li>
<li>Integrated session clustering</li>
<li>Expanded documentation</li>
</ul>

<p>Users of Tomcat 5 should be aware that Tomcat 5 has now reached
<a href="tomcat-55-eol.html">end of life</a>. Users of Tomcat 5.x should
upgrade to Tomcat 7.x or later.</p>

</section>

<section name="Apache Tomcat 4.x">

<p><strong>Apache Tomcat 4.x</strong> is available for download from the
archives.</p>

<p><strong>Apache Tomcat 4.x</strong> implements a new servlet container (called
Catalina) that is based on completely new architecture.  The 4.x releases
implement the <strong>Servlet 2.3</strong> and <strong>JSP 1.2</strong>
specifications.</p>

<p><strong>Apache Tomcat 4.1.x</strong> is a refactoring
of Apache Tomcat 4.0.x, and contains significant enhancements, including:</p>
<ul>
<li>JMX based administration features</li>
<li>JSP and Struts based administration web application</li>
<li>New Coyote connector (HTTP/1.1, AJP 1.3 and JNI support)</li>
<li>Rewritten Jasper JSP page compiler</li>
<li>Performance and memory efficiency improvements</li>
<li>Enhanced manager application support for integration with development
tools</li>
<li>Custom Ant tasks to interact with the manager application directly
from build.xml scripts</li>
</ul>

<p><strong>Apache Tomcat 4.0.x</strong>.  Apache Tomcat 4.0.6 is the old production
quality release.  The 4.0 servlet
container (Catalina) has been developed from the ground up for flexibility and
performance.  Version 4.0 implements the final released versions of the Servlet
2.3 and JSP 1.2 specifications.  As required by the specifications, Apache Tomcat 4.0
also supports web applications built for the Servlet 2.2 and JSP 1.1
specifications with no changes.</p>

<p>Users of Tomcat 4 should be aware that Tomcat 4 has now reached
end of life. Users of Tomcat 4.x should upgrade to Tomcat 7.x or
later.</p>

</section>

<section name="Apache Tomcat 3.x">

<p><strong>Apache Tomcat 3.x</strong> is available for download from the
archives.</p>

<ul>
<li>Version <strong>3.3</strong> is the current production quality release for
the Servlet 2.2 and JSP 1.1 specifications.  Apache Tomcat 3.3 is the latest
continuation of the Apache Tomcat 3.x architecture; it is more advanced then 3.2.4,
which is the 'old' production quality release.</li>
<li>Version 3.2.4 is the 'old' production quality release and is now in
maintenance only mode.</li>
<li>Version 3.1.1 is a legacy release.</li>
</ul>

<p>
All <strong>Apache Tomcat 3.x</strong> releases trace their heritage back to the
original Servlet and JSP implementations that Sun donated to the Apache
Software Foundation.  The 3.x versions all implement the <strong>Servlet
2.2</strong> and <strong>JSP 1.1</strong> specifications.
</p>

<p><strong>Apache Tomcat 3.3.x</strong>. Version 3.3.2 is the current production
quality release. It continues the refactoring that was begun in version 3.2 and
carries it to its logical conclusion.  Version 3.3 provides a much more modular
design and allows the servlet container to be customized by adding and removing
modules that control the processing of servlet requests.  This version also
contains many performance improvements.</p>

<p><strong>Apache Tomcat 3.2.x</strong>.  Version 3.2 added few new features
since 3.1; the major effort was a refactoring of the internals to improve
performance and stability.  The 3.2.1 release, like 3.1.1, was a security
patch.  Version 3.2.2 fixed a large number of bugs and all known
specification compliance issues.  Version 3.2.3 was a security update that
closes a serious security hole.  Version 3.2.4 is a minor bug fix release.
All users of Apache Tomcat versions prior to 3.2.3 should upgrade as soon as
possible.  With the exception of fixes for critical security related bugs,
development on the Apache Tomcat 3.2.x branch has stopped.</p>

<p><strong>Apache Tomcat 3.1.x</strong>.  The 3.1 release contained several
improvements over Apache Tomcat 3.0, including servlet reloading, WAR file
support and added connectors for the IIS and Netscape web servers.  The
latest maintenance release, 3.1.1, contained fixes for security problems.
There is no active development ongoing for Apache Tomcat 3.1.x.  Users of Apache Tomcat
3.1 should update to 3.1.1 to close the security holes and they are
strongly encouraged to migrate to the current production release, Apache Tomcat
3.3.</p>

<p><strong>Apache Tomcat 3.0.x</strong>. Initial Apache Tomcat release.</p>

<p>Users of Tomcat 3 should be aware that Tomcat 3 has now reached
end of life. Users of Tomcat 3.x should upgrade to Tomcat 7.x or
later.</p>

</section>

</body>
</document>
